version: '3.8'

services:
  japanese-address-parser:
    image: framjet/japanese-address-parser-api:latest
    container_name: japanese-address-parser-api
    ports:
      - "3000:3000"
    environment:
      - RUST_LOG=info
      - HOST=0.0.0.0
      - PORT=3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.japanese-parser.rule=Host(`parser.example.com`)"
      - "traefik.http.services.japanese-parser.loadbalancer.server.port=3000"
    networks:
      - parser-network

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - parser-network
    profiles:
      - monitoring

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - parser-network
    profiles:
      - monitoring

networks:
  parser-network:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local